# fog-sw BUILDER
ARG ROS_DISTRO="galactic"
FROM ros:${ROS_DISTRO}-ros-base as fog-sw-builder

ARG UID=1000
ARG GID=1000
ARG BUILD_NUMBER
ARG COMMIT_ID
ARG GIT_VER
ARG PACKAGE_NAME
# Install build dependencies
RUN apt-get update -y && apt-get install -y --no-install-recommends \
    curl \
    python3-bloom \
    fakeroot \
    dh-make \
    libboost-dev \
    && rm -rf /var/lib/apt/lists/*


RUN groupadd -g $GID builder && \
    useradd -m -u $UID -g $GID -g builder builder && \
    usermod -aG sudo builder && \
    echo 'builder ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

RUN echo "deb [trusted=yes] https://ssrc.jfrog.io/artifactory/ssrc-debian-public-remote focal fog-sw" >> /etc/apt/sources.list

RUN mkdir -p /$PACKAGE_NAME/packaging

# Workaround for rosdep issue with libpcl-dev install
RUN apt-get update -y && apt-get install -y --no-install-recommends \
    libflann-dev \
    libboost-filesystem-dev \
    libboost-date-time-dev \
    libboost-iostreams-dev \
    libusb-1.0-0-dev \
    ros-foxy-pcl-msgs \
    && rm -rf /var/lib/apt/lists/*

# build pcl
RUN mkdir -p /$PACKAGE_NAME/pcl
COPY build_pcl.sh /$PACKAGE_NAME/pcl/
RUN cd /$PACKAGE_NAME \
    && curl -fsSL https://github.com/PointCloudLibrary/pcl/releases/download/pcl-1.12.1/source.tar.gz -o source.tar.gz \
    && tar xzvf source.tar.gz \
    && cd pcl && ./build_pcl.sh

# build pcl-conversions
RUN curl -fsSL https://github.com/ros-perception/perception_pcl/archive/refs/tags/2.2.1.tar.gz -o perception_pcl.tar.gz \
    && tar xzvf perception_pcl.tar.gz \
    && cd perception_pcl-2.2.1/pcl_conversions \
    && mkdir -p build && cd build \
    && . /opt/ros/foxy/setup.sh \
    && cmake .. && make -j$(nproc) install

COPY packaging/rosdep.yaml* packaging/rosdep.sh packaging/build_deps.sh /$PACKAGE_NAME/packaging/
COPY underlay.repos package.xml /$PACKAGE_NAME/packaging/
COPY entrypoint.sh* /$PACKAGE_NAME/

#RUN /$PACKAGE_NAME/packaging/rosdep.sh /$PACKAGE_NAME

RUN chown -R builder:builder /$PACKAGE_NAME

USER builder

#RUN rosdep update

#RUN /$PACKAGE_NAME/packaging/build_deps.sh /$PACKAGE_NAME

VOLUME /$PACKAGE_NAME/sources
WORKDIR /$PACKAGE_NAME/sources
